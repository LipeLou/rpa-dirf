╔══════════════════════════════════════════════════════════════════════════════╗
║                                                                              ║
║                     🚀 COMO EXECUTAR O PROJETO 🚀                            ║
║                                                                              ║
╚══════════════════════════════════════════════════════════════════════════════╝


┌──────────────────────────────────────────────────────────────────────────────┐
│ PASSO 1: INSTALAÇÃO                                                          │
└──────────────────────────────────────────────────────────────────────────────┘

   Abra o terminal nesta pasta e execute:

   $ ./setup.sh

   OU manualmente:

   $ pip install -r requirements.txt
   $ sudo apt-get install chromium-chromedriver


┌──────────────────────────────────────────────────────────────────────────────┐
│ PASSO 2: INICIAR SERVIDOR                                                    │
└──────────────────────────────────────────────────────────────────────────────┘

   📟 TERMINAL 1:

   $ python app.py

   ✅ Você verá:
      🚀 Servidor rodando em: http://localhost:5000
      📊 Visualizar dados em: http://localhost:5000/visualizar

   ⚠️  NÃO FECHE ESTE TERMINAL! Deixe o servidor rodando.


┌──────────────────────────────────────────────────────────────────────────────┐
│ PASSO 3A: TESTAR MANUALMENTE (OPCIONAL)                                      │
└──────────────────────────────────────────────────────────────────────────────┘

   1. Abra seu navegador
   2. Vá para: http://localhost:5000
   3. Preencha o formulário
   4. Clique em "Concluir"
   5. Veja a página de sucesso
   6. Clique em "Ver cadastros realizados"


┌──────────────────────────────────────────────────────────────────────────────┐
│ PASSO 3B: TESTAR COM SELENIUM (RECOMENDADO)                                  │
└──────────────────────────────────────────────────────────────────────────────┘

   📟 TERMINAL 2 (abra um NOVO terminal):

   $ python test_selenium.py

   Você verá um menu:
   ┌─────────────────────────────────────────────────┐
   │ 1 - Teste completo do formulário               │
   │ 2 - Teste de validação de campos               │
   │ 3 - Teste de múltiplos cadastros               │
   │ 4 - Executar todos os testes                   │
   └─────────────────────────────────────────────────┘

   Digite: 1 (para começar com o teste completo)

   ✅ O navegador abrirá automaticamente!
   ✅ Você verá o formulário sendo preenchido sozinho!
   ✅ Aguarde até aparecer "TESTE CONCLUÍDO COM SUCESSO!"


┌──────────────────────────────────────────────────────────────────────────────┐
│ PASSO 4: TESTES AVANÇADOS (OPCIONAL)                                         │
└──────────────────────────────────────────────────────────────────────────────┘

   📟 TERMINAL 2:

   $ python test_avancado.py

   Escolha:
   ┌─────────────────────────────────────────────────┐
   │ 1 - Fluxo completo (com screenshots)           │
   │ 2 - Validações do formulário                   │
   │ 3 - Performance (5 cadastros rápidos)          │
   │ 4 - Interatividade dos elementos               │
   │ 5 - Executar todos os testes                   │
   └─────────────────────────────────────────────────┘

   💡 O teste 1 captura screenshots automaticamente!


┌──────────────────────────────────────────────────────────────────────────────┐
│ PASSO 5: GERENCIAR BANCO DE DADOS                                            │
└──────────────────────────────────────────────────────────────────────────────┘

   📟 Em qualquer terminal:

   $ python gerenciar_db.py

   Menu disponível:
   ┌─────────────────────────────────────────────────┐
   │ 1 - Visualizar todos os cadastros              │
   │ 2 - Visualizar cadastro por ID                 │
   │ 3 - Buscar por nome                            │
   │ 4 - Ver estatísticas                           │
   │ 5 - Exportar para CSV                          │
   │ 6 - Deletar cadastro por ID                    │
   │ 7 - Limpar todos os cadastros                  │
   │ 0 - Sair                                       │
   └─────────────────────────────────────────────────┘


┌──────────────────────────────────────────────────────────────────────────────┐
│ FLUXO COMPLETO VISUAL                                                        │
└──────────────────────────────────────────────────────────────────────────────┘

   Terminal 1              Terminal 2              Navegador
   ─────────────────────────────────────────────────────────────────────────────

   $ python app.py
   [servidor rodando]                           Chrome abrindo...
                          $ python test_selenium.py
                          Escolha: 1
                                                  ✅ Formulário preenchendo
                                                  ✅ Dados sendo enviados
                                                  ✅ Página de sucesso
                                                  ✅ Lista de cadastros

   [Continue rodando]     [Teste completo! ✓]    [Fechado automaticamente]


═══════════════════════════════════════════════════════════════════════════════

📊 VERIFICAR RESULTADOS:

   1️⃣  Via navegador: http://localhost:5000/visualizar
   2️⃣  Via script: python gerenciar_db.py
   3️⃣  Via SQLite: sqlite3 devs.db "SELECT * FROM cadastros;"

═══════════════════════════════════════════════════════════════════════════════

🛑 PARAR O SERVIDOR:

   No Terminal 1 (onde o servidor está rodando):
   Pressione: Ctrl + C

═══════════════════════════════════════════════════════════════════════════════

❓ PROBLEMAS COMUNS:

   ❌ "ModuleNotFoundError: No module named 'flask'"
      ➜ Execute: pip install -r requirements.txt

   ❌ "chromedriver not found"
      ➜ Execute: sudo apt-get install chromium-chromedriver

   ❌ "Address already in use"
      ➜ Porta 5000 ocupada. Execute: sudo lsof -i :5000
      ➜ Mate o processo: sudo kill -9 <PID>

   ❌ Teste não encontra elementos
      ➜ Certifique-se que o servidor está rodando
      ➜ Acesse http://localhost:5000 no navegador para confirmar

═══════════════════════════════════════════════════════════════════════════════

💡 DICAS:

   ✓ Sempre inicie o SERVIDOR antes dos TESTES
   ✓ Mantenha o servidor rodando em um terminal separado
   ✓ Você pode executar múltiplos testes seguidos
   ✓ Screenshots são salvos no diretório atual (teste_avancado.py)
   ✓ O banco de dados persiste entre execuções
   ✓ Use gerenciar_db.py opção 7 para limpar dados de teste

═══════════════════════════════════════════════════════════════════════════════

🎯 EXEMPLO DE SESSÃO COMPLETA:

   $ ./setup.sh                    # Instalar (apenas na primeira vez)
   $ python app.py                 # Terminal 1: Iniciar servidor
   
   [ABRA NOVO TERMINAL]
   
   $ python test_selenium.py       # Terminal 2: Teste básico
     Opção: 1
     [Aguarde conclusão]
   
   $ python test_avancado.py       # Terminal 2: Teste avançado  
     Opção: 3
     [Aguarde - verá 5 cadastros rápidos]
   
   $ python gerenciar_db.py        # Terminal 2: Ver resultados
     Opção: 4
     [Verá estatísticas]
   
   [VOLTE AO TERMINAL 1]
   
   Ctrl + C                        # Parar servidor

═══════════════════════════════════════════════════════════════════════════════

📚 PARA APRENDER MAIS:

   📄 Leia: CONCEITOS.md         - Entenda a teoria
   📄 Leia: README.md            - Documentação completa
   📄 Leia: COMANDOS_UTEIS.txt   - Referência de comandos

═══════════════════════════════════════════════════════════════════════════════


╔══════════════════════════════════════════════════════════════════════════════╗
║                                                                              ║
║                  🎉 PRONTO PARA COMEÇAR! BOA SORTE! 🎉                       ║
║                                                                              ║
║                Execute: ./setup.sh && python app.py                          ║
║                                                                              ║
╚══════════════════════════════════════════════════════════════════════════════╝


